{"version":3,"sources":["components/Card.js","components/CodeViewer.js","components/DirectoryItem.js","components/DirectoryList.js","components/App.js","reportWebVitals.js","index.js"],"names":["Card","title","children","className","rest","style","backgroundColor","CodeViewer","file","highlighted","Prism","highlight","languages","javascript","name","dangerouslySetInnerHTML","__html","DirectoryItem","item","inset","selectedFile","setSelectedFile","marginLeft","onClick","map","child","idx","DirectoryList","directoryList","App","useState","href","src","alt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8PAAe,SAASA,EAAT,GAA6D,IAA7CC,EAA4C,EAA5CA,MAAOC,EAAqC,EAArCA,SAAqC,IAA3BC,iBAA2B,MAAf,GAAe,EAARC,EAAQ,iBACzE,OACE,8CAAKD,UAAW,QAAUA,GAAeC,GAAzC,cACE,6BAAKH,IAEL,qBAAKE,UAAU,eAAeE,MAAO,CAAEC,gBAAiB,aAAxD,SACGJ,Q,0BCsCM,SAASK,EAAT,GAA+B,IAATC,EAAQ,EAARA,KAC7BC,EAAcC,IAAMC,UA1CnB,4pCA4CLD,IAAME,UAAUC,WAChB,cAGF,OAAKL,EAKH,gCACE,qCAAMA,QAAN,IAAMA,OAAN,EAAMA,EAAMM,OAEZ,qBACEC,wBAAyB,CAAEC,OAAQP,GACnCN,UAAU,0BATP,gB,WC1BIc,MA1Bf,SAASA,EAAT,GAAwE,IAAD,EAA9CC,EAA8C,EAA9CA,KAAMC,EAAwC,EAAxCA,MAAOC,EAAiC,EAAjCA,aAAcC,EAAmB,EAAnBA,gBAClD,OACE,sBAAKhB,MAAO,CAAEiB,WAAYH,GAAS,IAAMhB,UAAU,iBAAnD,UACE,iCACGe,EAAKhB,SAAW,eAAO,eAAM,IAC9B,sBACEC,UAAU,sBACVoB,QAAS,kBAAMF,EAAgBH,IAFjC,SAIGA,EAAKJ,UAPZ,UAWGI,EAAKhB,gBAXR,aAWG,EAAesB,KAAI,SAACC,EAAOC,GAAR,OAClB,cAACT,EAAD,CACEG,aAAcA,EACdC,gBAAiBA,EACjBH,KAAMO,EAENN,OAAK,GADAO,UCAAC,MAff,YAA2D,IAAlCP,EAAiC,EAAjCA,aAAcC,EAAmB,EAAnBA,gBACrC,OACE,8BACGO,EAAcJ,KAAI,SAACN,EAAMQ,GAAP,OACjB,cAAC,EAAD,CACEN,aAAcA,EACdC,gBAAiBA,EACjBH,KAAMA,GACDQ,SC2BAG,MAjCf,WACE,MAAwCC,qBAAxC,mBAAOV,EAAP,KAAqBC,EAArB,KAEA,OACE,sBAAKlB,UAAU,MAAf,UACE,eAACH,EAAD,CAAMG,UAAU,WAAWF,MAAM,MAAjC,UACE,qBAAKE,UAAU,OAAf,oPAOA,oBAAGA,UAAU,YAAY4B,KAAK,mCAA9B,UACE,qBAAKC,IAAI,mBAAmBC,IAAI,WADlC,mBAMF,cAACjC,EAAD,CAAMG,UAAU,sBAAsBF,MAAM,YAA5C,SACE,cAAC,EAAD,CACEmB,aAAcA,EACdC,gBAAiBA,MAIrB,cAACrB,EAAD,CAAMG,UAAU,cAAcF,MAAM,SAApC,SACE,cAACM,EAAD,CAAYC,KAAMY,UCpBXc,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.fcc9ed5c.chunk.js","sourcesContent":["export default function Card({ title, children, className = \"\", ...rest }) {\r\n  return (\r\n    <div className={\"card \" + className} {...rest}>\r\n      <h1>{title}</h1>\r\n\r\n      <div className=\"card-content\" style={{ backgroundColor: \"#70FFD319\" }}>\r\n        {children}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import Prism from \"prismjs\";\r\nimport \"prismjs/themes/prism-tomorrow.css\";\r\n\r\nconst str = `import { useState } from \"react\";\r\nimport Card from \"./Card\";\r\nimport CodeViewer from \"./CodeViewer\";\r\nimport DirectoryList from \"./DirectoryList\";\r\n\r\nfunction App() {\r\n  const [selectedFile, setSelectedFile] = useState();\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <Card className=\"bio-card\" title=\"Bio\">\r\n        <div className=\"flex\">\r\n          Lorem ipsum dolor sit amet consectetur adipisicing elit. Dolorum\r\n          numquam obcaecati voluptatum in aliquam beatae sint aliquid assumenda.\r\n          Necessitatibus a atque, magnam dolorum officia labore. Magnam corporis\r\n          assumenda ad obcaecati.\r\n        </div>\r\n\r\n        <a className=\"icon-link\" href=\"https://www.github.com/chronixlo\">\r\n          <img src=\"github-light.png\" alt=\"Github\" />\r\n          @chronixlo\r\n        </a>\r\n      </Card>\r\n\r\n      <Card className=\"directory-list-card\" title=\"Directory\">\r\n        <DirectoryList\r\n          selectedFile={selectedFile}\r\n          setSelectedFile={setSelectedFile}\r\n        />\r\n      </Card>\r\n\r\n      <Card className=\"source-card\" title=\"Source\">\r\n        <CodeViewer file={selectedFile} />\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n`;\r\n\r\nexport default function CodeViewer({ file }) {\r\n  const highlighted = Prism.highlight(\r\n    str,\r\n    Prism.languages.javascript,\r\n    \"javascript\"\r\n  );\r\n\r\n  if (!file) {\r\n    return \"Select a file\";\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div>{file?.name}</div>\r\n\r\n      <div\r\n        dangerouslySetInnerHTML={{ __html: highlighted }}\r\n        className=\"code-viewer-source\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","function DirectoryItem({ item, inset, selectedFile, setSelectedFile }) {\r\n  return (\r\n    <div style={{ marginLeft: inset && 10 }} className=\"directory-item\">\r\n      <span>\r\n        {item.children ? \"üìÅ\" : \"üìÑ\"}{\" \"}\r\n        <span\r\n          className=\"directory-item-name\"\r\n          onClick={() => setSelectedFile(item)}\r\n        >\r\n          {item.name}\r\n        </span>\r\n      </span>\r\n\r\n      {item.children?.map((child, idx) => (\r\n        <DirectoryItem\r\n          selectedFile={selectedFile}\r\n          setSelectedFile={setSelectedFile}\r\n          item={child}\r\n          key={idx}\r\n          inset\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DirectoryItem;\r\n","import directoryList from \"../generated/directoryList.json\";\r\nimport DirectoryItem from \"./DirectoryItem\";\r\n\r\nfunction DirectoryList({ selectedFile, setSelectedFile }) {\r\n  return (\r\n    <div>\r\n      {directoryList.map((item, idx) => (\r\n        <DirectoryItem\r\n          selectedFile={selectedFile}\r\n          setSelectedFile={setSelectedFile}\r\n          item={item}\r\n          key={idx}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DirectoryList;\r\n","import { useState } from \"react\";\nimport Card from \"./Card\";\nimport CodeViewer from \"./CodeViewer\";\nimport DirectoryList from \"./DirectoryList\";\n\nfunction App() {\n  const [selectedFile, setSelectedFile] = useState();\n\n  return (\n    <div className=\"app\">\n      <Card className=\"bio-card\" title=\"Bio\">\n        <div className=\"flex\">\n          Lorem ipsum dolor sit amet consectetur adipisicing elit. Dolorum\n          numquam obcaecati voluptatum in aliquam beatae sint aliquid assumenda.\n          Necessitatibus a atque, magnam dolorum officia labore. Magnam corporis\n          assumenda ad obcaecati.\n        </div>\n\n        <a className=\"icon-link\" href=\"https://www.github.com/chronixlo\">\n          <img src=\"github-light.png\" alt=\"Github\" />\n          @chronixlo\n        </a>\n      </Card>\n\n      <Card className=\"directory-list-card\" title=\"Directory\">\n        <DirectoryList\n          selectedFile={selectedFile}\n          setSelectedFile={setSelectedFile}\n        />\n      </Card>\n\n      <Card className=\"source-card\" title=\"Source\">\n        <CodeViewer file={selectedFile} />\n      </Card>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}